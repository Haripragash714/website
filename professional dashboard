<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Professional Admin Panel</title>
    <!-- Tailwind CSS CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Google Fonts for a clean font -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <!-- Lucide Icons for a professional look -->
    <script src="https://unpkg.com/lucide@latest"></script>
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
        /* Custom styles for the message modal */
        #message-modal {
            background-color: rgba(0, 0, 0, 0.5);
            transition: opacity 0.3s ease-in-out;
        }
        #message-modal-content {
            transform: translateY(-20px);
            transition: transform 0.3s ease-in-out;
        }
        #message-modal.show #message-modal-content {
            transform: translateY(0);
        }
        /* Custom styles for the services modal */
        #services-modal {
            background-color: rgba(0, 0, 0, 0.5);
            transition: opacity 0.3s ease-in-out;
        }
        #services-modal-content {
            transform: translateY(-20px);
            transition: transform 0.3s ease-in-out;
        }
        #services-modal.show #services-modal-content {
            transform: translateY(0);
        }
        /* Custom styles for the profile modal */
        #profile-modal {
            background-color: rgba(0, 0, 0, 0.5);
            transition: opacity 0.3s ease-in-out;
        }
        #profile-modal-content {
            transform: translateY(-20px);
            transition: transform 0.3s ease-in-out;
        }
        #profile-modal.show #profile-modal-content {
            transform: translateY(0);
        }
        /* Styles for the dropdown menu */
        .dropdown {
            position: relative;
            display: inline-block;
        }
        .dropdown-content {
            display: none;
            position: absolute;
            background-color: #f9f9f9;
            min-width: 200px;
            box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
            z-index: 10;
            border-radius: 0.75rem;
            padding: 1rem;
            left: 50%;
            transform: translateX(-50%);
            top: 100%;
            margin-top: 0.5rem;
        }
        .show-dropdown {
            display: block !important;
        }
    </style>
</head>
<body class="bg-gray-100 transition-colors duration-300">

    <!-- Main container for the dashboard -->
    <div class="flex h-screen">
        <!-- Mobile menu button -->
        <button id="sidebar-toggle-btn" class="fixed top-4 left-4 z-50 p-2 md:hidden text-gray-800 bg-white rounded-lg shadow-md focus:outline-none focus:ring-2 focus:ring-teal-500 transition-all duration-300">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-menu"><line x1="4" x2="20" y1="12" y2="12"/><line x1="4" x2="20" y1="6" y2="6"/><line x1="4" x2="20" y1="18" y2="18"/></svg>
        </button>

        <!-- Sidebar for navigation -->
        <aside id="sidebar" class="bg-gray-800 text-gray-200 w-64 h-screen fixed top-0 left-0 p-4 transform -translate-x-full md:translate-x-0 transition-transform duration-300 ease-in-out z-40 md:z-auto">
            <div class="flex items-center justify-between h-16 border-b border-gray-700">
                <span class="text-2xl font-bold text-teal-400">Admin Panel</span>
                <button id="close-sidebar-btn" class="md:hidden text-gray-400 hover:text-white focus:outline-none">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-x"><path d="M18 6 6 18"/><path d="m6 6 12 12"/></svg>
                </button>
            </div>
            <nav class="mt-8">
                <ul>
                    <li class="mb-2">
                        <button data-page="dashboard" class="nav-button flex items-center w-full px-4 py-2 rounded-lg transition-colors duration-200 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-teal-500">
                            <i data-lucide="layout-dashboard" class="w-5 h-5"></i>
                            <span class="ml-3 font-medium">Dashboard</span>
                        </button>
                    </li>
                    <li class="mb-2">
                        <button data-page="customers" class="nav-button flex items-center w-full px-4 py-2 rounded-lg transition-colors duration-200 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-teal-500">
                            <i data-lucide="users" class="w-5 h-5"></i>
                            <span class="ml-3 font-medium">My customers</span>
                        </button>
                    </li>
                    <li class="mb-2">
                        <button data-page="reviews" class="nav-button flex items-center w-full px-4 py-2 rounded-lg transition-colors duration-200 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-teal-500">
                            <i data-lucide="star" class="w-5 h-5"></i>
                            <span class="ml-3 font-medium">My Reviews</span>
                        </button>
                    </li>
                    <li class="mb-2">
                        <button data-page="services" class="nav-button flex items-center w-full px-4 py-2 rounded-lg transition-colors duration-200 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-teal-500">
                            <i data-lucide="award" class="w-5 h-5"></i>
                            <span class="ml-3 font-medium">My Services</span>
                        </button>
                    </li>
                    <li class="mb-2">
                        <button data-page="profile" class="nav-button flex items-center w-full px-4 py-2 rounded-lg transition-colors duration-200 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-teal-500">
                            <i data-lucide="user-cog" class="w-5 h-5"></i>
                            <span class="ml-3 font-medium">My Profile</span>
                        </button>
                    </li>
                </ul>
            </nav>
        </aside>

        <!-- Main content area -->
        <div class="flex-1 flex flex-col md:ml-64">
            <!-- Header -->
            <header class="flex items-center justify-between bg-white shadow-md p-4 sticky top-0 z-30 transition-colors duration-300">
                <h1 class="text-2xl font-bold text-gray-800" id="header-title">Dashboard</h1>
                <div class="flex items-center space-x-4">
                    <span class="text-gray-700 font-medium hidden sm:block">Admin User</span>
                    <div class="h-10 w-10 bg-teal-500 text-white rounded-full flex items-center justify-center font-bold">
                        <span>AU</span>
                    </div>
                </div>
            </header>

            <!-- Page content -->
            <main class="flex-1 overflow-y-auto p-6 md:p-10">
                <!-- Dashboard Page -->
                <div id="dashboard-page" class="content-page">
                    <!-- Statistics Cards -->
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
                        <div class="bg-white rounded-xl shadow-lg p-6 flex items-center justify-between transform hover:scale-105 transition-transform duration-200">
                            <div>
                                <p class="text-sm text-gray-500">Total Customers</p>
                                <h2 class="text-3xl font-bold text-gray-800 mt-1">1,250</h2>
                            </div>
                            <div class="p-3 rounded-full bg-teal-500 text-white shadow-lg">
                                <i data-lucide="users" class="w-6 h-6"></i>
                            </div>
                        </div>
                        <div class="bg-white rounded-xl shadow-lg p-6 flex items-center justify-between transform hover:scale-105 transition-transform duration-200">
                            <div>
                                <p class="text-sm text-gray-500">Total Orders</p>
                                <h2 class="text-3xl font-bold text-gray-800 mt-1">5,432</h2>
                            </div>
                            <div class="p-3 rounded-full bg-blue-500 text-white shadow-lg">
                                <i data-lucide="shopping-cart" class="w-6 h-6"></i>
                            </div>
                        </div>
                        <div class="bg-white rounded-xl shadow-lg p-6 flex items-center justify-between transform hover:scale-105 transition-transform duration-200">
                            <div>
                                <p class="text-sm text-gray-500">Revenue</p>
                                <h2 class="text-3xl font-bold text-gray-800 mt-1">$75,123</h2>
                            </div>
                            <div class="p-3 rounded-full bg-indigo-500 text-white shadow-lg">
                                <i data-lucide="credit-card" class="w-6 h-6"></i>
                            </div>
                        </div>
                        <div class="bg-white rounded-xl shadow-lg p-6 flex flex-col justify-between transform hover:scale-105 transition-transform duration-200">
                            <div>
                                <p class="text-sm text-gray-500">Pending Orders</p>
                                <h2 class="text-3xl font-bold text-gray-800 mt-1">24</h2>
                            </div>
                            <button id="view-pending-btn" class="mt-4 w-full bg-yellow-500 hover:bg-yellow-600 text-white font-medium py-2 px-4 rounded-lg transition-colors duration-200 shadow-md">
                                View All
                            </button>
                        </div>
                    </div>
                </div>

                <!-- My Customers Page -->
                <div id="customers-page" class="content-page hidden">
                    <div class="flex justify-between items-center mb-4">
                        <h2 class="text-3xl font-bold text-gray-800">My Orders</h2>
                    </div>
                    <!-- Customers Table -->
                    <div class="bg-white rounded-xl shadow-lg p-6">
                        <div class="overflow-x-auto">
                            <table class="min-w-full divide-y divide-gray-200">
                                <thead class="bg-gray-50">
                                    <tr>
                                        <th class="px-4 py-2 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">S.No</th>
                                        <th class="px-4 py-2 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Service / Prize</th>
                                        <th class="px-4 py-2 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Status</th>
                                    </tr>
                                </thead>
                                <tbody id="customers-table-body" class="bg-white divide-y divide-gray-200">
                                    <!-- Customer rows will be dynamically added here by JavaScript -->
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <!-- My Reviews Page -->
                <div id="reviews-page" class="content-page hidden">
                    <h2 class="text-3xl font-bold text-gray-800 mb-4">My Reviews</h2>
                    <!-- Review Card Grid -->
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <!-- Example Review Card -->
                        <div class="bg-white rounded-xl shadow-lg p-6 flex flex-col">
                            <div class="flex items-center mb-4">
                                <div class="h-12 w-12 rounded-full bg-blue-100 flex items-center justify-center font-bold text-blue-600">
                                    JD
                                </div>
                                <div class="ml-4">
                                    <p class="font-bold text-gray-800">Jane Doe</p>
                                    <div class="flex items-center text-yellow-400">
                                        <i data-lucide="star" class="h-5 w-5 fill-current"></i>
                                        <i data-lucide="star" class="h-5 w-5 fill-current"></i>
                                        <i data-lucide="star" class="h-5 w-5 fill-current"></i>
                                        <i data-lucide="star" class="h-5 w-5 fill-current"></i>
                                        <i data-lucide="star-half" class="h-5 w-5 fill-current"></i>
                                        <span class="ml-2 text-gray-500 text-sm">4.5/5</span>
                                    </div>
                                </div>
                            </div>
                            <p class="text-gray-700 flex-grow">
                                "The service was excellent! The professional was very knowledgeable and completed the job ahead of schedule. Highly recommended."
                            </p>
                            <span class="text-sm text-gray-500 mt-4 self-end">
                                Reviewed on July 29, 2024
                            </span>
                        </div>
                        <div class="bg-white rounded-xl shadow-lg p-6 flex flex-col">
                            <div class="flex items-center mb-4">
                                <div class="h-12 w-12 rounded-full bg-green-100 flex items-center justify-center font-bold text-green-600">
                                    AJ
                                </div>
                                <div class="ml-4">
                                    <p class="font-bold text-gray-800">Alex Johnson</p>
                                    <div class="flex items-center text-yellow-400">
                                        <i data-lucide="star" class="h-5 w-5 fill-current"></i>
                                        <i data-lucide="star" class="h-5 w-5 fill-current"></i>
                                        <i data-lucide="star" class="h-5 w-5 fill-current"></i>
                                        <i data-lucide="star" class="h-5 w-5 fill-current"></i>
                                        <i data-lucide="star" class="h-5 w-5 fill-current"></i>
                                        <span class="ml-2 text-gray-500 text-sm">5/5</span>
                                    </div>
                                </div>
                            </div>
                            <p class="text-gray-700 flex-grow">
                                "Couldn't be happier with the results! A true professional who delivered exactly what I needed. Will definitely hire again."
                            </p>
                            <span class="text-sm text-gray-500 mt-4 self-end">
                                Reviewed on July 28, 2024
                            </span>
                        </div>
                    </div>
                </div>

                <!-- My Services Page -->
                <div id="services-page" class="content-page hidden">
                    <div class="bg-white rounded-xl shadow-lg p-6">
                        <div class="flex justify-between items-center mb-4">
                            <h2 class="text-3xl font-bold text-gray-800">My Services</h2>
                            <button id="add-service-btn" class="bg-teal-500 hover:bg-teal-600 text-white font-medium py-2 px-4 rounded-lg transition-colors duration-200 shadow-md flex items-center space-x-2">
                                <i data-lucide="plus" class="w-5 h-5"></i>
                                <span>Add</span>
                            </button>
                        </div>
                        <ul id="services-list" class="divide-y divide-gray-200">
                            <!-- Services will be dynamically added here by JavaScript -->
                        </ul>
                    </div>
                </div>

                <!-- My Profile Page -->
                <div id="profile-page" class="content-page hidden">
                    <div class="flex justify-between items-center mb-4">
                        <h2 class="text-3xl font-bold text-gray-800">My Profile</h2>
                        <button id="edit-profile-btn" class="bg-gray-200 hover:bg-gray-300 text-gray-800 font-medium py-2 px-4 rounded-lg transition-colors duration-200 shadow-md flex items-center space-x-2">
                            <i data-lucide="pencil" class="w-5 h-5"></i>
                            <span>Edit</span>
                        </button>
                    </div>
                    <div id="profile-display-card" class="bg-white rounded-xl shadow-lg p-6">
                        <div class="mb-4">
                            <p class="text-sm font-semibold text-gray-500">Full Name</p>
                            <p id="profile-display-name" class="text-lg text-gray-800 mt-1 font-medium"></p>
                        </div>
                        <div class="mb-4">
                            <p class="text-sm font-semibold text-gray-500">Mobile Number</p>
                            <p id="profile-display-mobile" class="text-lg text-gray-800 mt-1 font-medium"></p>
                        </div>
                        <div>
                            <p class="text-sm font-semibold text-gray-500">Address</p>
                            <p id="profile-display-address" class="text-lg text-gray-800 mt-1 font-medium"></p>
                        </div>
                    </div>
                </div>
            </main>
        </div>
    </div>

    <!-- Modal for messages -->
    <div id="message-modal" class="fixed inset-0 z-50 flex items-center justify-center hidden opacity-0 transition-opacity duration-300">
        <div id="message-modal-content" class="bg-white rounded-xl shadow-2xl p-6 w-96 transform scale-95 transition-transform duration-300">
            <h3 id="modal-title" class="text-lg font-bold mb-2 text-gray-800"></h3>
            <p id="modal-message" class="text-gray-600"></p>
            <button onclick="closeModal()" class="mt-4 w-full bg-teal-500 hover:bg-teal-600 text-white font-medium py-2 px-4 rounded-lg transition-colors duration-200">
                OK
            </button>
        </div>
    </div>

    <!-- Modal for adding/editing services -->
    <div id="services-modal" class="fixed inset-0 z-50 flex items-center justify-center hidden opacity-0 transition-opacity duration-300">
        <div id="services-modal-content" class="bg-white rounded-xl shadow-2xl p-6 w-11/12 max-w-lg transform scale-95 transition-transform duration-300">
            <h3 class="text-lg font-bold mb-4 text-gray-800">Select Your Services</h3>
            <div id="services-checkboxes" class="space-y-3 mb-6 max-h-64 overflow-y-auto pr-2">
                <!-- Checkboxes will be dynamically added here by JavaScript -->
            </div>
            <div class="flex space-x-2 mb-4">
                <button id="select-all-btn" class="flex-1 bg-gray-200 hover:bg-gray-300 text-gray-800 font-medium py-2 px-4 rounded-lg transition-colors duration-200">
                    All
                </button>
                <button id="reset-services-btn" class="flex-1 bg-red-100 hover:bg-red-200 text-red-700 font-medium py-2 px-4 rounded-lg transition-colors duration-200">
                    Reset
                </button>
            </div>
            <div class="flex space-x-4">
                <button id="save-services-btn" class="flex-1 bg-teal-500 hover:bg-teal-600 text-white font-medium py-2 px-4 rounded-lg transition-colors duration-200 shadow-md">
                    Save
                </button>
                <button onclick="closeServicesModal()" class="flex-1 bg-gray-200 hover:bg-gray-300 text-gray-800 font-medium py-2 px-4 rounded-lg transition-colors duration-200">
                    Cancel
                </button>
            </div>
        </div>
    </div>

    <!-- Modal for editing profile -->
    <div id="profile-modal" class="fixed inset-0 z-50 flex items-center justify-center hidden opacity-0 transition-opacity duration-300">
        <div id="profile-modal-content" class="bg-white rounded-xl shadow-2xl p-6 w-11/12 max-w-lg transform scale-95 transition-transform duration-300">
            <h3 class="text-lg font-bold mb-4 text-gray-800">Edit Profile</h3>
            <form id="profile-form">
                <div class="mb-4">
                    <label for="full-name" class="block text-sm font-medium text-gray-700">Full Name</label>
                    <input type="text" id="full-name" name="fullName" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-teal-500 focus:ring-teal-500 sm:text-sm p-2" required>
                </div>
                <div class="mb-4">
                    <label for="mobile-number" class="block text-sm font-medium text-gray-700">Mobile Number</label>
                    <input type="tel" id="mobile-number" name="mobileNumber" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-teal-500 focus:ring-teal-500 sm:text-sm p-2" required>
                </div>
                <div class="mb-4">
                    <label for="address" class="block text-sm font-medium text-gray-700">Address</label>
                    <textarea id="address" name="address" rows="3" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-teal-500 focus:ring-teal-500 sm:text-sm p-2" required></textarea>
                </div>
                <div class="flex space-x-4 mt-6">
                    <button type="submit" class="flex-1 bg-teal-500 hover:bg-teal-600 text-white font-medium py-2 px-4 rounded-lg transition-colors duration-200 shadow-md">
                        Save Changes
                    </button>
                    <button type="button" onclick="closeProfileModal()" class="flex-1 bg-gray-200 hover:bg-gray-300 text-gray-800 font-medium py-2 px-4 rounded-lg transition-colors duration-200">
                        Cancel
                    </button>
                </div>
            </form>
        </div>
    </div>


    <script>
        // Mock data
        const mockCustomers = [{
            orderId: '#4533',
            name: 'John Doe',
            mobile: '123-456-7890',
            address: '123 Main St, Anytown, USA',
            service: 'Electrician',
            servicePrize: '$50.00',
            status: 'Completed',
            amount: '$50.00'
        }, {
            orderId: '#4532',
            name: 'Jane Smith',
            mobile: '987-654-3210',
            address: '456 Oak Ave, Somewhere, USA',
            service: 'AC-Service Mechanic',
            servicePrize: '$75.50',
            status: 'Pending',
            amount: '$75.50'
        }, {
            orderId: '#4531',
            name: 'Peter Jones',
            mobile: '555-111-2222',
            address: '789 Pine Ln, Nowhere, USA',
            service: 'Plumber',
            servicePrize: '$120.00',
            status: 'Cancelled',
            amount: '$120.00'
        }];

        const mockServices = [{
            name: 'Plumbing',
            id: 'service-1'
        }, {
            name: 'Electrician',
            id: 'service-2'
        }, {
            name: 'AC-Service',
            id: 'service-3'
        }, ];

        const mockProfile = {
            fullName: 'Admin User',
            mobileNumber: '123-456-7890',
            address: '456 Tech Lane, Silicon Valley, CA 94043'
        };

        // DOM elements
        const sidebar = document.getElementById('sidebar');
        const sidebarToggleBtn = document.getElementById('sidebar-toggle-btn');
        const closeSidebarBtn = document.getElementById('close-sidebar-btn');
        const navButtons = document.querySelectorAll('.nav-button');
        const contentPages = document.querySelectorAll('.content-page');
        const headerTitle = document.getElementById('header-title');
        const customersTableBody = document.getElementById('customers-table-body');
        const servicesList = document.getElementById('services-list');
        const addServiceBtn = document.getElementById('add-service-btn');
        const selectAllBtn = document.getElementById('select-all-btn');
        const resetServicesBtn = document.getElementById('reset-services-btn');
        const saveServicesBtn = document.getElementById('save-services-btn');
        const servicesCheckboxesContainer = document.getElementById('services-checkboxes');
        const servicesModal = document.getElementById('services-modal');
        const profileDisplayCard = document.getElementById('profile-display-card');
        const profileDisplay = document.getElementById('profile-display');
        const editProfileBtn = document.getElementById('edit-profile-btn');
        const profileModal = document.getElementById('profile-modal');
        const profileForm = document.getElementById('profile-form');
        const profileDisplayName = document.getElementById('profile-display-name');
        const profileDisplayMobile = document.getElementById('profile-display-mobile');
        const profileDisplayAddress = document.getElementById('profile-display-address');
        const messageModal = document.getElementById('message-modal');
        const modalTitle = document.getElementById('modal-title');
        const modalMessage = document.getElementById('modal-message');

        // State
        let activePage = 'dashboard';
        let userSelectedServices = new Set(['service-1', 'service-2']); // Example of initially selected services

        /**
         * Shows a specific page and hides all others.
         * @param {string} pageId The ID of the page to show.
         */
        const showPage = (pageId) => {
            contentPages.forEach(page => {
                page.classList.add('hidden');
            });
            document.getElementById(`${pageId}-page`).classList.remove('hidden');
            headerTitle.textContent = pageId.charAt(0).toUpperCase() + pageId.slice(1);
        };

        /**
         * Sets the active state for a navigation button.
         * @param {HTMLElement} button The button to set as active.
         */
        const setActiveButton = (button) => {
            navButtons.forEach(btn => {
                btn.classList.remove('bg-gray-700', 'text-white');
                btn.classList.add('text-gray-200');
            });
            button.classList.add('bg-gray-700', 'text-white');
            button.classList.remove('text-gray-200');
        };

        /**
         * Renders the customers table with mock data.
         */
        const renderCustomersTable = () => {
            customersTableBody.innerHTML = '';
            mockCustomers.forEach((customer, index) => {
                const statusColor = customer.status === 'Completed' ? 'bg-green-100 text-green-800' :
                                    customer.status === 'Pending' ? 'bg-yellow-100 text-yellow-800' :
                                    'bg-red-100 text-red-800';

                const rowHtml = `
                    <tr class="hover:bg-gray-50 transition-colors duration-200">
                        <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-700">${index + 1}</td>
                        <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-700">
                            <div class="dropdown">
                                <div class="cursor-pointer service-name-btn flex items-center justify-between p-2 rounded-lg hover:bg-gray-100 transition-colors duration-200">
                                    <div>
                                        <div class="font-medium">${customer.service}</div>
                                        <div class="text-xs text-gray-500 mt-1">${customer.servicePrize}</div>
                                    </div>
                                </div>
                                <div class="dropdown-content">
                                    <div class="text-sm">
                                        <p class="font-medium text-gray-900 mb-1">Order ID: <span class="font-normal text-gray-600">${customer.orderId}</span></p>
                                        <p class="font-medium text-gray-900 mb-1">Customer: <span class="font-normal text-gray-600">${customer.name}</span></p>
                                        <p class="font-medium text-gray-900 mb-4">Location: <span class="font-normal text-gray-600">${customer.address}</span></p>
                                        <a href="tel:${customer.mobile}" class="call-now-btn w-full bg-teal-500 hover:bg-teal-600 text-white text-center font-medium py-2 px-4 rounded-lg transition-colors duration-200">
                                            Call Now
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </td>
                        <td class="px-4 py-4 whitespace-nowrap text-sm">
                            <span class="inline-flex px-2 text-xs font-semibold leading-5 ${statusColor} rounded-full">${customer.status}</span>
                        </td>
                    </tr>
                `;
                customersTableBody.innerHTML += rowHtml;
            });
        };

        // Function to render the services list
        const renderServicesList = () => {
            servicesList.innerHTML = '';
            mockServices.forEach(service => {
                const isSelected = userSelectedServices.has(service.id);
                const li = document.createElement('li');
                li.className = `flex items-center justify-between py-4 px-4 rounded-lg transition-colors duration-200 cursor-pointer ${isSelected ? 'bg-teal-100 hover:bg-teal-200' : 'hover:bg-gray-50'}`;
                li.innerHTML = `
                    <div class="flex items-center">
                        <div class="h-10 w-10 bg-gray-200 rounded-full flex items-center justify-center text-gray-600 font-bold mr-4">
                            <i data-lucide="wrench" class="w-5 h-5"></i>
                        </div>
                        <span class="text-gray-800 font-medium">${service.name}</span>
                    </div>
                    <div class="flex items-center space-x-2">
                        <span class="text-sm font-semibold text-teal-600">${isSelected ? 'Active' : ''}</span>
                        <button class="edit-service-btn text-gray-500 hover:text-gray-700 focus:outline-none">
                            <i data-lucide="edit" class="w-5 h-5"></i>
                        </button>
                    </div>
                `;
                servicesList.appendChild(li);
            });
            lucide.createIcons();
        };

        // Function to render the profile display
        const renderProfileDisplay = () => {
            profileDisplayName.textContent = mockProfile.fullName;
            profileDisplayMobile.textContent = mockProfile.mobileNumber;
            profileDisplayAddress.textContent = mockProfile.address;
        };

        // Function to open the services modal
        const openServicesModal = () => {
            servicesCheckboxesContainer.innerHTML = '';
            mockServices.forEach(service => {
                const isChecked = userSelectedServices.has(service.id);
                const checkboxDiv = document.createElement('div');
                checkboxDiv.className = 'flex items-center p-3 rounded-lg hover:bg-gray-100 transition-colors duration-200 cursor-pointer';
                checkboxDiv.innerHTML = `
                    <input type="checkbox" id="service-${service.id}" name="service-${service.id}" value="${service.id}" class="h-5 w-5 text-teal-600 border-gray-300 rounded focus:ring-teal-500" ${isChecked ? 'checked' : ''}>
                    <label for="service-${service.id}" class="ml-3 text-gray-800 font-medium cursor-pointer">${service.name}</label>
                `;
                servicesCheckboxesContainer.appendChild(checkboxDiv);
            });
            servicesModal.classList.remove('hidden', 'opacity-0');
            setTimeout(() => {
                servicesModal.style.opacity = 1;
                servicesModal.querySelector('#services-modal-content').style.transform = 'translateY(0)';
            }, 10);
        };

        // Function to close the services modal
        const closeServicesModal = () => {
            servicesModal.style.opacity = 0;
            servicesModal.querySelector('#services-modal-content').style.transform = 'translateY(-20px)';
            setTimeout(() => {
                servicesModal.classList.add('hidden');
            }, 300);
        };

        // Function to open the profile modal
        const openProfileModal = () => {
            profileForm.elements['fullName'].value = mockProfile.fullName;
            profileForm.elements['mobileNumber'].value = mockProfile.mobileNumber;
            profileForm.elements['address'].value = mockProfile.address;
            profileModal.classList.remove('hidden', 'opacity-0');
            setTimeout(() => {
                profileModal.style.opacity = 1;
                profileModal.querySelector('#profile-modal-content').style.transform = 'translateY(0)';
            }, 10);
        };

        // Function to close the profile modal
        const closeProfileModal = () => {
            profileModal.style.opacity = 0;
            profileModal.querySelector('#profile-modal-content').style.transform = 'translateY(-20px)';
            setTimeout(() => {
                profileModal.classList.add('hidden');
            }, 300);
        };

        // Function to show a message modal
        const showModal = (title, message) => {
            modalTitle.textContent = title;
            modalMessage.textContent = message;
            messageModal.classList.remove('hidden', 'opacity-0');
            setTimeout(() => {
                messageModal.style.opacity = 1;
                messageModal.querySelector('#message-modal-content').style.transform = 'translateY(0)';
            }, 10);
        };

        // Function to close the message modal
        const closeModal = () => {
            messageModal.style.opacity = 0;
            messageModal.querySelector('#message-modal-content').style.transform = 'translateY(-20px)';
            setTimeout(() => {
                messageModal.classList.add('hidden');
            }, 300);
        };

        // Event listeners
        sidebarToggleBtn.addEventListener('click', () => {
            sidebar.classList.toggle('-translate-x-full');
        });

        closeSidebarBtn.addEventListener('click', () => {
            sidebar.classList.add('-translate-x-full');
        });

        navButtons.forEach(button => {
            button.addEventListener('click', () => {
                const pageId = button.getAttribute('data-page');
                showPage(pageId);
                setActiveButton(button);
                // Hide sidebar on mobile after clicking a link
                if (window.innerWidth < 768) {
                    sidebar.classList.add('-translate-x-full');
                }
            });
        });

        // Event listener for the dropdown menu toggle
        customersTableBody.addEventListener('click', (event) => {
            const target = event.target.closest('.service-name-btn');
            if (target) {
                const dropdownContent = target.nextElementSibling;
                if (dropdownContent) {
                    // Close all other open dropdowns
                    document.querySelectorAll('.dropdown-content').forEach(dropdown => {
                        if (dropdown !== dropdownContent) {
                            dropdown.classList.remove('show-dropdown');
                        }
                    });
                    // Toggle the clicked dropdown
                    dropdownContent.classList.toggle('show-dropdown');
                }
            }
        });

        // Close dropdowns when clicking outside
        document.addEventListener('click', (event) => {
            if (!event.target.closest('.dropdown')) {
                document.querySelectorAll('.dropdown-content').forEach(dropdown => {
                    dropdown.classList.remove('show-dropdown');
                });
            }
        });

        addServiceBtn.addEventListener('click', openServicesModal);

        selectAllBtn.addEventListener('click', () => {
            servicesCheckboxesContainer.querySelectorAll('input[type="checkbox"]').forEach(checkbox => {
                checkbox.checked = true;
            });
        });

        resetServicesBtn.addEventListener('click', () => {
            servicesCheckboxesContainer.querySelectorAll('input[type="checkbox"]').forEach(checkbox => {
                checkbox.checked = false;
            });
        });

        saveServicesBtn.addEventListener('click', () => {
            const newSelectedServices = new Set();
            servicesCheckboxesContainer.querySelectorAll('input[type="checkbox"]:checked').forEach(checkbox => {
                newSelectedServices.add(checkbox.value);
            });
            userSelectedServices = newSelectedServices;
            renderServicesList();
            closeServicesModal();
            showModal('Success!', 'Services have been updated successfully.');
        });

        editProfileBtn.addEventListener('click', openProfileModal);

        profileForm.addEventListener('submit', (e) => {
            e.preventDefault();
            mockProfile.fullName = profileForm.elements['fullName'].value;
            mockProfile.mobileNumber = profileForm.elements['mobileNumber'].value;
            mockProfile.address = profileForm.elements['address'].value;
            renderProfileDisplay();
            closeProfileModal();
            showModal('Success!', 'Profile has been updated successfully.');
        });

        // Initially show the dashboard page and set active button, and render the initial services list and customers table
        showPage('dashboard');
        setActiveButton(document.querySelector('[data-page="dashboard"]'));
        renderCustomersTable();
        renderServicesList();
        renderProfileDisplay();
        lucide.createIcons();
    </script>
</body>
</html>
